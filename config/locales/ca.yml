ca:
  label_all_git: Automatically Initialize Git Repositories For New Projects 
  label_delete_git_repositories: Delete Git Repository When Project Deleted<br/>(will be place in Recycle Bin)
  label_git_server: Gitolite Server Domain
  label_http_server: HTTP Server Domain (for git http urls)
  label_git_user: Git Username
  label_gitolite_identity_public_key_file: Gitolite SSH Identity File (Public Key)
  label_gitolite_identity_file: Gitolite SSH Identity File (Private Key)
  label_gitolite_config_file: Gitolite Configuration File<br/>(Relative to conf directory)
  label_gitolite_config_has_admin_key: Gitolite Configuration File has Admin Key
  label_git_repository_base_path: Git Repository Base Path<br/>(Relative to git user home)
  label_git_recycle_base_path: Git Recycle Bin Base Path <br/>(Relative to git user home)
  label_git_recycle_expire_time: Expire Time for Repositories in Recycle Bin <br/>(in hours)
  label_git_lock_wait_time: Synchronization Lock Wait Time <br/>(in seconds)
  label_cannot_change_selinux: Cannot Change in Current Configuration
  label_http_server_subdir: Subdirectory for HTTP access<br/>(Relative to Redmine Root)
  label_git_redmine_subdir: Subdirectory for Redmine-managed Repos<br/>(Relative to Git Repository Base Path)
  label_git_repository_hierarchy: Directory and URL Structure for<br/>Redmine-managed Repositories
  label_git_repository_ident_unique: Repository identifiers are globally unique
  label_basic_settings: Basic Settings
  label_gitolite_access_URLs: Gitolite Access URL Settings
  label_gitolite_repository_settings: Gitolite Repository Settings
  label_current_access_patterns: Current Repository Access Patterns
  label_storage: Repo Storage
  label_ssh_access: SSH Access
  label_http_access: HTTP Access
  label_tmp_data_dir: Temporary Dir for Locks and Data (Absolute)
  label_script_dir: Scripts (Absolute/Relative to Redmine Root)
  label_default_git_daemon: Default Git Daemon Mode for New Repos
  label_default_smart_http: Default Smart HTTP Mode for New Repos
  label_default_notify_cia: Default Notify CIA Mode for New Repos

  field_git_daemon: Git Daemon
  field_git_http: Git Smart HTTP
  field_notify_cia: Notify CIA.vc
  

  label_git_show_urls: "Show checkout URL's"
  label_enabled: Enabled
  label_disabled: Disabled
  label_true: "True"
  label_false: "False"
  label_flat: Flat
  label_hierarchical: Hierarchical
  label_https_only: HTTPS Only
  label_https_and_http: HTTPS and HTTP

  label_permissions_header: Required Permissions
  label_sudo_web_to_git_user: Web user is able to sudo to Git user?
  label_sudo_git_to_web_user: Git user is able to sudo to Web user?


  label_copy_to_clipboard: "Copy to clipboard"




  label_git_hook_header: Repository Hooks
  label_git_hook_debug: Run hooks in Debug mode
  label_git_hooks_are_asynchronous: Run hooks asynchronously
  label_git_force_hooks_update: Force hooks to be Updated
  label_hook_installed: Hook installed
  label_hook_dir_installed: Global hook directory installed

  label_public_keys: Public keys
  label_current_public_keys: Current Public keys
  label_current_user_keys: Current User Keys
  label_current_deploy_keys: Current Deployment Keys
  label_user_key: User Key
  label_deploy_key: Deploy Key
  field_key_type: Public Key Type
  field_delete_when_unused: Delete Key When Unused
  label_identifier_can_be_arbitrary: Identifier (can be any meaningful string)
  label_cut_and_paste: Key (cut and paste entire .pub file)
  label_public_key_new: Enter new Public key
  label_public_key_edit: Edit existing Public key
  field_key: Key
  field_public_key: Key
  field_title: Identifier
  label_identifier_cannot_be_changed: Identifier<br/><em>(Cannot be changed)</em>
  notice_public_key_updated: Public key <strong>%{title}</strong> was successfully updated.
  notice_public_key_added: Public key <strong>%{title}</strong> was successfully added.
  notice_public_key_deleted: Public key <strong>%{title}</strong> was successfully deleted.
  error_public_key_create_failed: Failed to create public key.
  error_public_key_update_failed: Failed to update public key.
  label_key_cannot_be_changed_please_create_new_key: 'The key cannot be altered anymore. However, you can delete it and create a new one.'
  error_key_corrupted: seems to be corrupted.
  error_key_needs_two_components: 'needs at least two components: [key-type] and [key-value].'
  error_key_bad_type: 'has a bad type.  Valid types are %{types}.'
  word_or: or
  error_key_type_mismatch: type (%{type1}) does not match type within body of key (%{type2}).
  error_key_in_use_by_you: 'is already in use by you as "%{name}".'
  error_key_in_use_by_other: 'is already in use by user "%{login}" as "%{name}".'
  error_key_in_use_by_admin: is already in use as the gitolite administrator key.
  error_key_in_use_by_someone: is already in use. It belongs to another user (ask administrator for details).
  activerecord:
    errors:
      messages:
        'may not be changed': 'may not be changed'
        cannot_change: "cannot be changed"
        ident_not_unique: "matches existing repository identifier"
        ident_cannot_equal_project: "cannot match identifier of existing project"
        blank_default_exists: "Cannot make repository the default because current default has blank identifier."

  text_gitolite_key_destroy_confirmation: Are you sure you want to destroy %{title}?
  text_this_key: this key
  label_deploy_perm: Access Permissions
  select_create_new_key: Create New Key (Below)
  select_other_keys: 'Other Keys'
  label_deployment_credential_create: Create New Deployment Credential
  label_deployment_credential_edit: Edit Deployment Credential
  label_deployment_credential_delete: Delete Deployment Credential
  label_which_deploy_key: Select Deployment Key
  notice_deployment_credential_updated: Deployment Credential <strong>%{title} => %{perm}</strong> was successfully updated.
  notice_deployment_credential_added: Deployment Credential <strong>%{title} => %{perm}</strong> was successfully added.
  notice_deployment_credential_deleted: Deployment Credential <strong>%{title} =>%{perm}</strong> was successfully deleted.
  notice_deployment_credential_deleted_with_key: Both Deployment Credential <strong>%{title} => %{perm}</strong> and Key <strong>%{title}</strong> were successfully deleted.
  error_deployment_credential_create_failed: Failed to create Deployment Credential.
  error_deployment_credential_update_failed: Failed to update Deployment Credential.
  field_perm: Permissions

  label_git_cache_max_time: Max Cache Time
  label_git_cache_max_elements: Max Cache Elements
  label_git_cache_max_size: Max Cache Element Size
  label_git_cache_parameters: Git Cache Parameters

  label_no_public_keys: No Public Keys Defined



  project_not_found: 'No project was found with the identifier "%{identifier}"'
  cia_not_enough_permissions: You don't have the required permissions to test CIA.vc notifications.
  field_notify_cia_test: Test Notification
  cia_notification_ok: Notification to CIA.vc sent.

  label_update_all_hooks: Update ALL repositories hook settings

  field_private_key: Private Key
  field_private_key_warning: "Do not use your own Private Key!<br/>Please generate a new one and upload it to the mirror server."
  label_mirror_create: Create Repository Mirror
  label_mirror_delete: Delete Repository Mirror
  label_mirror_edit: Edit Repository Mirror
  mirror_notice_deleted: Mirror was successfully deleted
  mirror_notice_created: Mirror was successfully created
  mirror_notice_updated: Mirror was successfully updated
  mirror_notice_create_failed: Failed to create mirror
  mirror_notice_update_failed: Failed to update mirror
  label_push_mode: Mirror update mode
  label_full_mirror: Complete Mirroring
  label_forced_update: Force Update Remote
  label_fast_forward: Fast Forward (Unforced)
  label_inactive: Inactive
  label_mirror: Mirror
  label_forced: Forced
  label_unforced: Unforced
  all_references: All&nbsp;Refs
  all_branches: All&nbsp;Branches
  all_tags: All&nbsp;Tags
  explicit: Explicit
  field_include_all_branches: Push all Branches
  field_include_all_tags: Push all Tags
  field_explicit_refspec: Explicit Reference Spec
  label_post_receive_url_create: Create Repository Post-receive URL
  label_post_receive_url_delete: Delete Repository Post-receive URL
  label_post_receive_url_edit: Edit Repository Post-receive URL
  post_receive_url_notice_deleted: Post-receive URL was successfully deleted
  post_receive_url_notice_created: Post-receive URL was successfully created
  post_receive_url_notice_updated: Post-receive URL was successfully updated
  post_receive_url_notice_create_failed: Failed to create Post-receive URL
  post_receive_url_notice_update_failed: Failed to update Post-receive URL
  field_mode: Mode
  label_github_post: GitHub&nbsp;POST
  label_empty_get: Empty&nbsp;GET

  button_push: Push
  button_push_title: "Push To Mirror"
  mirror_push_info_html: "Pushing changes to mirror <b>%{mirror_url}</b> ... %{status}"
  mirror_push_output_label: 'Output:'
  mirror_push_sucess: Success.
  mirror_push_fail: Failed!

  display_access_setup: Assume that <em>project1</em> is a parent of <em>project2</em>, and <em>project2</em> is a parent of <em>project3</em>. Given the current configuration, <em>project3</em>'s %{type}repository has the following properties
  display_access_emphasis: In the above patterns, <em>emphasized</em> components represent context-dependent elements. 
  display_access_hierarchical: Parent projects are included in the URLs, since the repository is in <em>Hierarchical</em> mode.
  display_access_flat: Parent projects are not included in the URLs, since the repository is in <em>Flat</em> mode.
