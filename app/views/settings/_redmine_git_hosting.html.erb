<%= stylesheet_link_tag('application', :plugin => 'redmine_git_hosting')%>

<%= render :partial => "display_access" %>
<br/>
<div class="tabular settings">
	<h3><%= l(:label_basic_settings)%></h3>
	<p>
		<label><%= l(:label_git_lock_wait_time)%></label>
		<%= text_field_tag("settings[gitLockWaitTime]", @settings['gitLockWaitTime'], :size => 10) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_tmp_data_dir) %></label>
		<%= text_field_tag("settings[gitTempDataDir]", @settings['gitTempDataDir'], :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_script_dir) %><%= "<br/><em>[ #{l(:label_cannot_change_selinux)} ]</em>" if !GitHosting.bin_dir_writeable? :reset %></label>
		<%= text_field_tag("settings[gitScriptDir]", reldir_add_dotslash(@settings['gitScriptDir']), :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_user) %><%= "<br/><em>[ #{l(:label_cannot_change_selinux)} ]</em>" if !GitHosting.bin_dir_writeable? :reset %></label>
		<%= text_field_tag("settings[gitUser]", @settings['gitUser'].split(/[\r\n\t ,;]+/).join("\n"), :size => 60) %>
		<br />
	</p>

	<p>
		<label><%= l(:label_gitolite_identity_file) %><%= "<br/><em>[ #{l(:label_cannot_change_selinux)} ]</em>" if !GitHosting.bin_dir_writeable? %></label>
		<%= text_field_tag("settings[gitoliteIdentityFile]", @settings['gitoliteIdentityFile'], :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_gitolite_identity_public_key_file) %><%= "<br/><em>[ #{l(:label_cannot_change_selinux)} ]</em>" if !GitHosting.bin_dir_writeable? %></label>
		<%= text_field_tag("settings[gitoliteIdentityPublicKeyFile]", @settings['gitoliteIdentityPublicKeyFile'], :size => 60) %>
		<br />
	</p>

	<br />

	<h3><%= l(:label_gitolite_repository_settings)%></h3>
	<p>
		<label><%= l(:label_gitolite_config_file)%></label>
		<%= text_field_tag("settings[gitConfigFile]", "./#{@settings['gitConfigFile']||GitHosting::GitoliteConfig::PRIMARY_CONF_FILE}", :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_gitolite_config_has_admin_key)%></label>
		<%= select_tag("settings[gitConfigHasAdminKey]", options_for_select([[l(:label_true), 'true'], [l(:label_false), 'false']], @settings['gitConfigHasAdminKey'])) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_repository_base_path)%></label>
		<%= text_field_tag("settings[gitRepositoryBasePath]", "./#{@settings['gitRepositoryBasePath']}", :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_redmine_subdir)%></label>
		<%= text_field_tag("settings[gitRedmineSubdir]", "./#{@settings['gitRedmineSubdir']}", :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_repository_hierarchy)%></label>
		<%= select_tag("settings[gitRepositoryHierarchy]", options_for_select([[l(:label_hierarchical), 'true'], [l(:label_flat), 'false']], @settings['gitRepositoryHierarchy'])) %>
		<br />
	</p>
	<% if GitHosting.multi_repos? %>
	  <p>
		<label><%= l(:label_git_repository_ident_unique)%></label>
		<%= select_tag("settings[gitRepositoryIdentUnique]", options_for_select([[l(:label_true), 'true'], [l(:label_false), 'false']], @settings['gitRepositoryIdentUnique'])) %>
		<br />
	  </p>
	<% end %>
	<p>
		<label><%= l(:label_all_git)%></label>
		<%= select_tag("settings[allProjectsUseGit]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['allProjectsUseGit'])) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_default_git_daemon) %></label>
		<%= select_tag("settings[gitDaemonDefault]", options_for_select([ [l(:label_disabled), "0"], [l(:label_enabled), "1"]], @settings['gitDaemonDefault']))%>
		<br />
	</p>
	<p>
		<label><%= l(:label_default_smart_http)%></label>
		<%= select_tag("settings[gitHttpDefault]", options_for_select([ [l(:label_disabled), "0"], [l(:label_https_only), "1"], [l(:label_https_and_http), "2"] ], @settings['gitHttpDefault'])) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_default_notify_cia) %></label>
		<%= select_tag("settings[gitNotifyCIADefault]", options_for_select([ [l(:label_disabled), "0"], [l(:label_enabled), "1"]], @settings['gitNotifyCIADefault']))%>
		<br />
	</p>
	<p>
		<label><%= l(:label_delete_git_repositories)%></label>
		<%= select_tag("settings[deleteGitRepositories]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['deleteGitRepositories'])) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_recycle_base_path)%></label>
		<%= text_field_tag("settings[gitRecycleBasePath]", "./#{@settings['gitRecycleBasePath']}", :size => 60) %>
		<br />
	</p>

	<p>
		<label><%= l(:label_git_recycle_expire_time)%></label>
		<%= text_field_tag("settings[gitRecycleExpireTime]", @settings['gitRecycleExpireTime'], :size => 10) %>
		<br />
	</p>

	<br />

	<h3><%= l(:label_gitolite_access_URLs)%></h3>
	<p>
		<label><%= l(:label_git_server)%></label>
		<%= text_field_tag("settings[gitServer]", @settings['gitServer'].split(/[\r\n\t ,;]+/).join("\n"), :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_http_server)%></label>
		<%= text_field_tag("settings[httpServer]", @settings['httpServer'].split(/[\r\n\t ,;]+/).join("\n"), :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_http_server_subdir)%></label>
		<%= text_field_tag("settings[httpServerSubdir]", "./#{@settings['httpServerSubdir']}", :size => 60) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_show_urls)%></label>
		<%= select_tag("settings[gitRepositoriesShowUrl]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['gitRepositoriesShowUrl'])) %>
		<br />
	</p>

	<br />
	<h3><%= l(:label_git_cache_parameters)%></h3>
	<p>
		<label><%= l(:label_git_cache_max_elements)%></label>
		<%= text_field_tag("settings[gitCacheMaxElements]", @settings['gitCacheMaxElements'], :size => 20) %>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_cache_max_size)%></label>
		<%= text_field_tag("settings[gitCacheMaxSize]", @settings['gitCacheMaxSize'], :size => 20) %><em> MB</em>
		<br />
	</p>
	<p>
		<label><%= l(:label_git_cache_max_time)%></label>
		<%= select_tag("settings[gitCacheMaxTime]",options_for_select([["Cache Disabled", "0"], ["Until Next Commit", "-1"], ["1 Minute or Until Next Commit", "60"], ["15 Minutes or Until Next Commit", "900"], ["1 Hour or Until Next Commit", "3600"], ["1 Day or Until Next Commit", "86400"]], @settings['gitCacheMaxTime'] )) %>
		<br />
	</p>


	<br />
	<h3><%= l(:label_git_hook_header)%></h3>

	<p>
		<label><%= l(:label_git_hooks_are_asynchronous)%></label>
		<%= select_tag("settings[gitHooksAreAsynchronous]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['gitHooksAreAsynchronous'])) %>
		<br />
	</p>

	<p>
		<label><%= l(:label_git_hook_debug)%></label>
		<%= select_tag("settings[gitHooksDebug]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['gitHooksDebug'])) %>
		<br />
	</p>

	<p>
		<label><%= l(:label_git_force_hooks_update)%></label>
		<%= select_tag("settings[gitForceHooksUpdate]", options_for_select([[l(:label_enabled), 'true'], [l(:label_disabled), 'false']], @settings['gitForceHooksUpdate'])) %>
		<br />
	</p>

	<p>
		<label><%= l(:label_hook_installed)%></label>
		<%= image_tag((GitHosting.check_hook_files_installed==true ? 'true.png' : 'exclamation.png'), :style => "vertical-align:bottom;") %>
		<em><%= (GitHosting.check_hook_files_installed==true ? '' : GitHosting.check_hook_files_installed) %></em>
		<br />
	</p>
	<p>
		<label><%= l(:label_hook_dir_installed)%></label>
		<%= image_tag((GitHosting.check_hook_dir_installed==true ? 'true.png' : 'exclamation.png'), :style => "vertical-align:bottom;") %>
		<em><%= (GitHosting.check_hook_dir_installed==true ? '' : GitHosting.check_hook_dir_installed) %></em>
		<br />
	</p>

	<br/>

	<h3><%= l(:label_permissions_header)%></h3>
	<p>
		<label><%= l(:label_sudo_git_to_web_user)%></label>
		<%= image_tag((GitHosting.sudo_git_to_web_user==true ? 'true.png' : 'exclamation.png'), :style => "vertical-align:bottom;") %>
		<em><%= (GitHosting.sudo_git_to_web_user==true ? '' : GitHosting.sudo_git_to_web_user) %></em>
		<br />
	</p>
	<p>
		<label><%= l(:label_sudo_web_to_git_user)%></label>
		<%= image_tag((GitHosting.sudo_web_to_git_user==true ? 'true.png' : 'exclamation.png'), :style => "vertical-align:bottom;") %>
		<em><%= (GitHosting.sudo_web_to_git_user==true ? '' : GitHosting.sudo_web_to_git_user) %></em>
		<br />
	</p>
	<p>
		<label>PATH Directories</label>
		<%= (ENV['PATH']).gsub(/:/, "<br/>") %>
		<br/>
	</p>
</div>
